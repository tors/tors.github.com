---
layout: post
title: "Setting up Sinatra to Use Slim, SASS, and Coffeescript"
author: Tors
date: 2011-09-09 14:35:20 +0800
description:
  I wanted to specify a custom directory for sass and coffescript files so I created two separate classes to handle coffee and sass files. We can then use these classes in our main Sinatra app.
categories:
- slim
- sinatra
- sass
- coffeescript
---

I wanted to play around "Slim":http://slim-lang.com/ and "Sinatra":http://sinatrarb.com. While I'm at it, I figured I might as well toss "CoffeeScript":http://jashkenas.github.com/coffee-script/ and "SASS":http://sass-lang.org to the mix. 

I wanted to specify a custom directory for sass and coffescript files so I created two separate classes to handle coffee and sass files. We can then use these classes in our main Sinatra app.

{% highlight ruby %}
class SassEngine < Sinatra::Base
  
  set :views,   File.dirname(__FILE__)    + '/assets/sass'
  
  get '/stylesheets/*.css' do
    filename = params[:splat].first
    sass filename.to_sym
  end
  
end

class CoffeeEngine < Sinatra::Base
  
  set :views,   File.dirname(__FILE__)    + '/assets/coffeescript'
  
  get "/javascripts/*.js" do
    filename = params[:splat].first
    coffee filename.to_sym
  end
  
end

{% endhighlight %}

h3. So here's what my omg_super_lightweight_app.rb file looks like.

{% highlight ruby %}

require 'rubygems'
require 'sinatra/base'
require 'coffee-script'
require 'sass'
require 'slim'

class SassEngine < Sinatra::Base
  
  set :views,   File.dirname(__FILE__)    + '/assets/sass'
  
  get '/stylesheets/*.css' do
    filename = params[:splat].first
    sass filename.to_sym
  end
  
end

class CoffeeEngine < Sinatra::Base
  
  set :views,   File.dirname(__FILE__)    + '/assets/coffeescript'
  
  get "/javascripts/*.js" do
    filename = params[:splat].first
    coffee filename.to_sym
  end
  
end

class OmgSuperLightweightApp < Sinatra::Base

  use SassEngine
  use CoffeeEngine

  set :views,   File.dirname(__FILE__)    + '/views'
  set :public,  File.dirname(__FILE__)    + '/public'
  
  get '/' do
    slim :index
  end
  
  if __FILE__ == $0
    OmgSuperLightweightApp.run! :port => 4000
  end
        
end

{% endhighlight %}

h3. Some helpful resources

* "Sinatra Doc":http://www.sinatrarb.com/intro
* "Sinatra Searchable API":http://railsapi.com/doc/sinatra-v1.0/